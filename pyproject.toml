[project]
authors = [{ name = "Frank Loesche", email = "loeschef@janelia.hhmi.org" }]
dependencies = [
    "click>=8.0.0",
    "jinja2>=3.0.0",
    "pyyaml>=6.0",
    "requests>=2.28.0",
    "pandas>=1.5.0",
    "neuprint-python>=0.4.0",
    "toml>=0.10.0",
    "python-dotenv>=1.0.0",
    "pycairo>=1.20.0",
    "cairosvg>=2.5.0",
    "minify-html>=0.16.4,<0.17",
    "cst-lsp>=0.1.3,<0.2",
]
name = "quickpage"
requires-python = ">= 3.11"
version = "0.1.0"

[project.scripts]
quickpage = "quickpage.cli:main"

[build-system]
build-backend = "hatchling.build"
requires = ["hatchling"]

[tool.pixi.project]
channels = ["conda-forge"]
platforms = ["linux-64", "win-64", "osx-64", "osx-arm64"]

[tool.pixi.dependencies]
python = ">=3.11"
click = "*"
jinja2 = "*"
pyyaml = "*"
requests = "*"
pandas = "*"
toml = "*"
pip = "*"
python-dotenv = "*"

pycairo = "*"
cairosvg = "*"
parallel = ">=20200322,<20250623"
python-lsp-server = ">=1.13.1,<2"
ruff = ">=0.12.11,<0.13"

[tool.pixi.feature.dev.dependencies]
pytest = "*"
pytest-cov = "*"
pytest-asyncio = ">=1.2.0,<2"

[tool.pixi.environments]
dev = ["dev"]

[tool.pixi.pypi-dependencies]
quickpage = { path = ".", editable = true }

[tool.pixi.tasks]
clean-output = "rm -rf output/"
pop-all = "yes pop | head -n $(find output/.queue -name '*.yaml' | wc -l) | parallel --no-notice quickpage"
help = "python -m quickpage --help"
setup-env = "cp .env.example .env && echo 'Created .env file. Please edit it and add your NEUPRINT_TOKEN.'"
fill-all = "quickpage fill-queue --all"
create-list = "quickpage create-list"

[tool.pixi.feature.dev.tasks]
test = "pytest test/"
test-verbose = "pytest -v test/"
test-coverage = "pytest --cov=src/quickpage test/"
format = "ruff format src/ test/"
check = "ruff check src/ test/"

[tool.pytest.ini_options]
testpaths = ["test"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--tb=short",
    "--strict-markers",
    "--disable-warnings",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "asyncio: marks tests as async tests",
]

[tool.pixi.tasks.fill-type]
args = [{ arg = "neuron_type", default = "" }]
cmd = "quickpage fill-queue{{ ' -n ' ~ neuron_type if neuron_type != '' else '' }}"

[tool.pixi.tasks.create-all-pages]
depends-on = [
    { task = "clean-output" },
    { task = "fill-all" },
    { task = "pop-all" },
    { task = "create-list" },
]

[tool.pixi.tasks.extract-and-fill]
args = [
    { arg = "config_file", default = "config.yaml" },
    { arg = "test_category", default = "normal-set" }
]
cmd = "python scripts/extract_and_fill.py {{ config_file }} {{ test_category }}"

[tool.pixi.tasks.test-set-no-index]
depends-on = [
    { task = "clean-output" },
    { task = "extract-and-fill" },
    { task = "fill-type", args = ["",] },
    { task = "pop-all" },
]

[tool.pixi.tasks.test-set]
depends-on = [{ task = "test-set-no-index" }, { task = "create-list" }]
