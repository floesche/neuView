# Comprehensive CI workflow with testing, coverage, and code quality checks
# Runs on pushes and pull requests to main branches
name: CI

on:
  push:
    branches: [main, develop, master]
  pull_request:
    branches: [main, develop, master]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
      # Check out the repository code
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up pixi for dependency management
      - name: Setup pixi
        uses: prefix-dev/setup-pixi@v0.9.0
        with:
          pixi-version: v0.49.0
          cache: true
          cache-write: ${{ github.event_name == 'push' && github.ref_name == 'main' }}

      # Install project dependencies in dev environment
      - name: Install dependencies
        run: pixi install --environment dev

      # Run the full test suite with verbose output
      - name: Run unit tests
        env:
          NEUPRINT_TOKEN: ${{ secrets.FRANKS_NEUPRINT_TOKEN }}
        run: pixi run --environment dev test-verbose

      # Generate test coverage report
      - name: Run tests with coverage
        env:
          NEUPRINT_TOKEN: ${{ secrets.FRANKS_NEUPRINT_TOKEN }}
        run: pixi run --environment dev test-coverage

  lint:
    name: Code Quality
    runs-on: ubuntu-latest

    steps:
      # Check out the repository code
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up pixi for dependency management
      - name: Setup pixi
        uses: prefix-dev/setup-pixi@v0.9.0
        with:
          pixi-version: v0.49.0
          cache: true
          cache-write: ${{ github.event_name == 'push' && github.ref_name == 'main' }}

      # Install project dependencies
      - name: Install dependencies
        run: pixi install

      # Check if code is properly formatted
      - name: Check code formatting with ruff
        run: pixi run ruff format --check src/ test/
        continue-on-error: true

      # Run linting to check code quality
      - name: Lint code with ruff
        run: pixi run ruff check src/ test/
        continue-on-error: true
